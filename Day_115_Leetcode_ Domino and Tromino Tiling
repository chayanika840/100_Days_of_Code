/*/We have two types of tiles: a 2x1 domino shape, and an "L" tromino shape. These shapes may be rotated.

XX <- domino

XX <- "L" tromino X Given N, how many ways are there to tile a 2 x N board? Return your answer modulo 10^9 + 7.

(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.) */

class Solution {
    public int numTilings(int N) {
        if(N == 1) return 1;
        if(N == 2) return 2;
        long[][] dp = new long[N + 1][3];
        dp[1][0] = 1; dp[2][0] = 2;
        dp[2][1] = 1;
        dp[2][2] = 1;
        int kmod = (int)1e9 + 7;
        for(int i = 3; i <= N; i++){
            dp[i][0] = (dp[i - 1][0] + dp[i - 2][0] + dp[i - 1][1] + dp[i - 1][2]) % kmod;
            dp[i][1] = (dp[i - 2][0] + dp[i - 1][2]) % kmod;
            dp[i][2] = (dp[i - 2][0] + dp[i - 1][1]) % kmod;
        }
        return (int)dp[N][0];
    }
}
        
