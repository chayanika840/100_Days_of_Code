//(Array problem)

class Solution {
    public List<List<Integer>> generate(int numRows) {
        
        //To find the pascals value at each element in the row (r) and COL(c), value calculated by the formula: r-1  C c-1
        //suppose r=5 and c=3, element at this position in pascals triangle is calculated like:  5-1 C 3-1=4C2=4*3/2*1=6
        //Observe the pattern... har row mein elements increase by 1..1 st row mein 1..then 2nd mein 2 then third mein 1 2 1..aise krke each time..therefore row=number of elements!
        //Time complexity O(N*2)
        //Har ka ncr perform krna bahut time n space consuming task hai :(
        //to compute the enitre row
        //to calculate the value of  [n*(n-1)  *___* (n-k+1)]
        /*for(int i=0;i<k; +i){
        res *= (n-i);
        res /= (i+1);
    } */
        //Time complexity for this is O(N) and Space complexity is O(N)
        
        
        List<List<Integer>>res=new ArrayList<List<Integer>>();
        List<Integer> row, pre=null;
            
            for(int i=0;i<numRows;++i){
                row=new ArrayList<Integer>();
                for(int j=0;j<=i;++j)
                    if(j==0 || j==i)
                        row.add(1);
                else
                    row.add(pre.get(j-1)+pre.get(j));
                pre=row;
                res.add(row);
            }
        return res;
        }
        
    }
