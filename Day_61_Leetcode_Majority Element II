*/Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Example 1:

Input: nums = [3,2,3]
Output: [3]
Example 2:

Input: nums = [1]
Output: [1]
*/

class Solution {
public vector<int> majorityElement(vector<int>& nums) {
    HashMap<Integer,Integer> hm=new HashMap<>();
        for (int i=0;i<nums.length;i++){
            if (!hm.containsKey(nums[i])){
                hm.put(nums[i],1);
            }else{
                hm.put(nums[i],hm.get(nums[i])+1);
            }
        }
        List<Integer> list=new ArrayList<>();
        int x=nums.length;
        for (Map.Entry m:hm.entrySet()){
            int value=(Integer)m.getValue();
            int key=(Integer)m.getKey();
            if (value > x/3) list.add(key);
        }
        return list;
        
    }
};
